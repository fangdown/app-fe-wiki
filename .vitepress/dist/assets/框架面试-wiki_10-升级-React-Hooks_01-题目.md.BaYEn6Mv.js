import{_ as o,c as a,o as e,a1 as t}from"./chunks/framework.BwTyoF0R.js";const R=JSON.parse('{"title":"题目","description":"","frontmatter":{},"headers":[],"relativePath":"框架面试-wiki/10-升级-React-Hooks/01-题目.md","filePath":"框架面试-wiki/10-升级-React-Hooks/01-题目.md"}'),s={name:"框架面试-wiki/10-升级-React-Hooks/01-题目.md"},c=t('<h1 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h1><ul><li>为什么要使用 React Hooks？解决了什么问题</li><li>React Hooks 如何模拟组件生命周期</li><li>如何自定义 Hook</li><li>React Hooks 性能优化</li><li>React Hooks 有哪些坑？ —— 看你是否在实战中用过 Hooks ，还是仅仅看了一些文档</li></ul><hr><p>React Hooks v16.8 发布的新 API</p><ul><li>完全可选的（class 组件 vs Hooks）</li><li>100% 向后兼容（Hooks 不包含任何破坏性改动，只是新功能的增加）</li><li>不会取代 class 组件 （React 也从没有计划要移除 class 组件）</li></ul><p>因此，面试官如果要问 React 面试题，只会拿出一部分时间问 Hooks 。 所以对于 React 初学者，还是以学习 React class 组件和基本使用为主，不用过多学 Hooks 。 熟悉了 React class 组件和基本使用之后，再来学习 Hooks 。</p><p>即，Hooks 是 React 的加分项，要考虑好轻重。</p><p>（列一下本章学习的所有知识点）</p>',8),i=[c];function l(_,r,k,n,p,d){return e(),a("div",null,i)}const h=o(s,[["render",l]]);export{R as __pageData,h as default};
