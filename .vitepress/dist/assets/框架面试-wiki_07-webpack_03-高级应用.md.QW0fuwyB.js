import{_ as e,c as l,o as a,a1 as i}from"./chunks/framework.BwTyoF0R.js";const k=JSON.parse('{"title":"webpack 高级应用","description":"","frontmatter":{},"headers":[],"relativePath":"框架面试-wiki/07-webpack/03-高级应用.md","filePath":"框架面试-wiki/07-webpack/03-高级应用.md"}'),o={name:"框架面试-wiki/07-webpack/03-高级应用.md"},t=i('<h1 id="webpack-高级应用" tabindex="-1">webpack 高级应用 <a class="header-anchor" href="#webpack-高级应用" aria-label="Permalink to &quot;webpack 高级应用&quot;">​</a></h1><h2 id="多入口" tabindex="-1">多入口 <a class="header-anchor" href="#多入口" aria-label="Permalink to &quot;多入口&quot;">​</a></h2><ul><li><p>新建 <code>other.html</code> 和 <code>other.js</code></p></li><li><p>修改 entry</p></li><li><p>修改 output</p></li><li><p>修改 HtmlWebpackPlugin</p></li><li><p>运行 dev</p></li><li><p>运行 build</p></li></ul><h2 id="抽离-压缩-css-文件" tabindex="-1">抽离 &amp; 压缩 css 文件 <a class="header-anchor" href="#抽离-压缩-css-文件" aria-label="Permalink to &quot;抽离 &amp; 压缩 css 文件&quot;">​</a></h2><p>抽离</p><ul><li>安装 <code>npm i mini-css-extract-plugin -D</code></li><li>将之前 common 中的 css 处理，移动到 dev 配置中</li><li>配置 prod （配置 module ，配置 plugin）</li><li>运行 build</li></ul><p>压缩</p><ul><li>安装 <code>npm i terser-webpack-plugin optimize-css-assets-webpack-plugin -D</code></li><li>配置 prod</li></ul><h2 id="抽离公共代码" tabindex="-1">抽离公共代码 <a class="header-anchor" href="#抽离公共代码" aria-label="Permalink to &quot;抽离公共代码&quot;">​</a></h2><ul><li>配置 <code>splitChunks</code></li><li>修改 HtmlWebpackPlugin 中的 chunks 。重要！！！</li><li>安装 lodash <code>npm i lodash --save</code> 做第三方模块的测试，引用 lodash</li><li>运行 build</li></ul><h2 id="懒加载" tabindex="-1">懒加载 <a class="header-anchor" href="#懒加载" aria-label="Permalink to &quot;懒加载&quot;">​</a></h2><ul><li>增加 <code>dynamic-data.js</code> 并动态引入</li><li>运行 dev 查看效果（看加载 js）</li><li>运行 build 看打包效果</li></ul><p>至此，可以总结一下：</p><ul><li>module：就是js的模块化webpack支持commonJS、ES6等模块化规范，简单来说就是你通过import语句引入的代码。</li><li>chunk: chunk是webpack根据功能拆分出来的，包含三种情况： <ul><li>你的项目入口（entry）</li><li>通过import()动态引入的代码</li><li>通过splitChunks拆分出来的代码</li><li>（chunk包含着module，可能是一对多也可能是一对一）</li></ul></li><li>bundle：bundle是webpack打包之后的各个文件，一般就是和chunk是一对一的关系，bundle就是对chunk进行编译压缩打包等处理之后的产出。</li></ul><h2 id="处理-react-和-vue" tabindex="-1">处理 React 和 vue <a class="header-anchor" href="#处理-react-和-vue" aria-label="Permalink to &quot;处理 React 和 vue&quot;">​</a></h2><ul><li>vue-loader</li><li>jsx 的编译，babel 已经支持，配置 <code>@babel/preset-react</code></li></ul><h2 id="常见-loader-和-plugin" tabindex="-1">常见 loader 和 plugin <a class="header-anchor" href="#常见-loader-和-plugin" aria-label="Permalink to &quot;常见 loader 和 plugin&quot;">​</a></h2><ul><li><a href="https://www.webpackjs.com/loaders/" target="_blank" rel="noreferrer">https://www.webpackjs.com/loaders/</a></li><li><a href="https://www.webpackjs.com/plugins/" target="_blank" rel="noreferrer">https://www.webpackjs.com/plugins/</a></li></ul>',18),c=[t];function r(s,d,p,n,u,h){return a(),l("div",null,c)}const m=e(o,[["render",r]]);export{k as __pageData,m as default};
