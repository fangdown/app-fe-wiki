import{_ as a,c as i,o as l,a1 as e}from"./chunks/framework.BwTyoF0R.js";const m=JSON.parse('{"title":"章回顾","description":"","frontmatter":{},"headers":[],"relativePath":"基础面试-wiki/14-学习过程/05-JS原型和原型链/章回顾.md","filePath":"基础面试-wiki/14-学习过程/05-JS原型和原型链/章回顾.md"}'),t={name:"基础面试-wiki/14-学习过程/05-JS原型和原型链/章回顾.md"},o=e('<h1 id="章回顾" tabindex="-1">章回顾 <a class="header-anchor" href="#章回顾" aria-label="Permalink to &quot;章回顾&quot;">​</a></h1><h2 id="产出" tabindex="-1">产出 <a class="header-anchor" href="#产出" aria-label="Permalink to &quot;产出&quot;">​</a></h2><ul><li>学会原型和原型链</li><li>学会 class 和继承</li></ul><h2 id="主要内容" tabindex="-1">主要内容 <a class="header-anchor" href="#主要内容" aria-label="Permalink to &quot;主要内容&quot;">​</a></h2><ul><li>JS 原型的考点和面试题</li><li>如何用 class 实现继承</li><li>如何理解 JS 原型（隐式原型和显示原型）</li><li>instanceof 是基于原型链实现的</li><li>JS 原型本章相关的面试题</li></ul><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ul><li>class</li><li>继承</li><li>原型</li><li>原型链</li><li>instanceof</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>如今 ES6 已经普及，用 class 继承即可，不用再关注其他继承方式</li></ul>',9),r=[o];function s(n,c,h,_,d,u){return l(),i("div",null,r)}const S=a(t,[["render",s]]);export{m as __pageData,S as default};
