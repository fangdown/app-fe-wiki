import{_ as a,c as t,o as e,a1 as o}from"./chunks/framework.BwTyoF0R.js";const p=JSON.parse('{"title":"解答","description":"","frontmatter":{},"headers":[],"relativePath":"基础面试-wiki/06-运行环境/02-页面加载/03-解答.md","filePath":"基础面试-wiki/06-运行环境/02-页面加载/03-解答.md"}'),l={name:"基础面试-wiki/06-运行环境/02-页面加载/03-解答.md"},i=o('<h1 id="解答" tabindex="-1">解答 <a class="header-anchor" href="#解答" aria-label="Permalink to &quot;解答&quot;">​</a></h1><h2 id="从输入url到得到html的详细过程" tabindex="-1">从输入url到得到html的详细过程 <a class="header-anchor" href="#从输入url到得到html的详细过程" aria-label="Permalink to &quot;从输入url到得到html的详细过程&quot;">​</a></h2><ul><li>浏览器根据 DNS 服务器得到域名的 IP 地址</li><li>向这个 IP 的机器发送 http 请求</li><li>服务器收到、处理并返回 http 请求</li><li>浏览器得到返回内容</li></ul><h2 id="window-onload-和-domcontentloaded-的区别" tabindex="-1">window.onload 和 DOMContentLoaded 的区别 <a class="header-anchor" href="#window-onload-和-domcontentloaded-的区别" aria-label="Permalink to &quot;window.onload 和 DOMContentLoaded 的区别&quot;">​</a></h2><ul><li>页面的全部资源加载完才会执行，包括图片、视频等</li><li>DOM 渲染完即可执行，此时图片、视频还没有加载完</li></ul>',5),n=[i];function d(r,_,c,h,s,u){return e(),t("div",null,n)}const f=a(l,[["render",d]]);export{p as __pageData,f as default};
