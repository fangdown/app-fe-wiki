import{_ as a,c as t,o as e,a1 as r}from"./chunks/framework.BwTyoF0R.js";const u=JSON.parse('{"title":"DOM 解答","description":"","frontmatter":{},"headers":[],"relativePath":"基础面试-wiki/03-JS-Web-API/02-DOM/03-解答.md","filePath":"基础面试-wiki/03-JS-Web-API/02-DOM/03-解答.md"}'),i={name:"基础面试-wiki/03-JS-Web-API/02-DOM/03-解答.md"},o=r('<h1 id="dom-解答" tabindex="-1">DOM 解答 <a class="header-anchor" href="#dom-解答" aria-label="Permalink to &quot;DOM 解答&quot;">​</a></h1><h2 id="dom-是哪种基本的数据结构" tabindex="-1">DOM 是哪种基本的数据结构？ <a class="header-anchor" href="#dom-是哪种基本的数据结构" aria-label="Permalink to &quot;DOM 是哪种基本的数据结构？&quot;">​</a></h2><p>树</p><h2 id="dom-操作的常用-api-有哪些" tabindex="-1">DOM 操作的常用 API 有哪些 <a class="header-anchor" href="#dom-操作的常用-api-有哪些" aria-label="Permalink to &quot;DOM 操作的常用 API 有哪些&quot;">​</a></h2><ul><li>获取节点，以及获取节点的 Attribute 和 property</li><li>获取父节点 获取子节点</li><li>新增节点，删除节点</li></ul><h2 id="dom-节点的-attr-和-property-有何区别" tabindex="-1">DOM 节点的 attr 和 property 有何区别 <a class="header-anchor" href="#dom-节点的-attr-和-property-有何区别" aria-label="Permalink to &quot;DOM 节点的 attr 和 property 有何区别&quot;">​</a></h2><ul><li>property 只是一个 JS 属性的修改</li><li>attr 是对 html 标签属性的修改</li></ul><h2 id="如何一次性插入多个-dom-节点-考虑性能" tabindex="-1">如何一次性插入多个 DOM 节点，考虑性能 <a class="header-anchor" href="#如何一次性插入多个-dom-节点-考虑性能" aria-label="Permalink to &quot;如何一次性插入多个 DOM 节点，考虑性能&quot;">​</a></h2><ul><li>使用 fragment</li><li>先插入节点</li><li>最后再插入 DOM 树</li></ul>',9),l=[o];function d(n,h,s,_,c,p){return e(),t("div",null,l)}const D=a(i,[["render",d]]);export{u as __pageData,D as default};
