import{_ as a,c as e,o as i,a1 as l}from"./chunks/framework.BwTyoF0R.js";const x=JSON.parse('{"title":"你的不足","description":"","frontmatter":{},"headers":[],"relativePath":"面试刷题-wiki/04-软技能/04-你目前有和不足.md","filePath":"面试刷题-wiki/04-软技能/04-你目前有和不足.md"}'),t={name:"面试刷题-wiki/04-软技能/04-你目前有和不足.md"},r=l('<h1 id="你的不足" tabindex="-1">你的不足 <a class="header-anchor" href="#你的不足" aria-label="Permalink to &quot;你的不足&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>你目前有何不足的地方？</p><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><p>如果你被问到这个问题，那恭喜你面试快要通过了。一般在 3-4 面，或者 hr 面试时会问道这个问题。<br> 无论是 hr 还是技术人员问，你都要从技术角度来回答这个问题，说自己技术上的不足。不要扯其他方面的，容易掉到坑里。</p><p>你不用担心 hr 听不懂技术，听不懂更好。</p><h2 id="不足-不要乱说" tabindex="-1">不足，不要乱说 <a class="header-anchor" href="#不足-不要乱说" aria-label="Permalink to &quot;不足，不要乱说&quot;">​</a></h2><p>要限定一个范围</p><ul><li>技术方面的</li><li>非核心技术栈的，即有不足也无大碍</li><li>些容易弥补的，后面才能“翻身”</li></ul><p>错误的示范</p><ul><li>我爱睡懒觉、总是迟到 —— 非技术方面</li><li>我自学的 Vue ，但还没有实践过 —— 核心技术栈</li><li>我不懂 React —— 技术栈太大，不容易弥补</li></ul><p>正确的示范</p><ul><li>脚手架，我还在学习中，还不熟练</li><li>nodejs 还需要继续深入学习</li></ul><h2 id="最后-要把话题反转回来" tabindex="-1">最后，要把话题反转回来 <a class="header-anchor" href="#最后-要把话题反转回来" aria-label="Permalink to &quot;最后，要把话题反转回来&quot;">​</a></h2><p>不能只说不足，就截止了。一定要通过不足，来突出自己的解决方案，以及未来的预期。<br> 这样给人的印象是：正式了自己的不足 + 有学习的态度 —— 非常好！</p><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><p>套这个模板</p><ul><li>我觉得自己在 xxx 方面还存在不足</li><li>但我已经意识到并且开始学习 xxx</li><li>争取在 xxx 时候把这块补齐</li></ul>',18),o=[r];function h(n,_,s,c,d,p){return i(),e("div",null,o)}const m=a(t,[["render",h]]);export{x as __pageData,m as default};
