import{_ as e,c as a,o as l,a1 as i}from"./chunks/framework.BwTyoF0R.js";const k=JSON.parse('{"title":"用两个栈实现一个队列","description":"","frontmatter":{},"headers":[],"relativePath":"面试刷题-wiki/06-数据结构和算法/03-用两个栈实现一个队列.md","filePath":"面试刷题-wiki/06-数据结构和算法/03-用两个栈实现一个队列.md"}'),t={name:"面试刷题-wiki/06-数据结构和算法/03-用两个栈实现一个队列.md"},o=i('<h1 id="用两个栈实现一个队列" tabindex="-1">用两个栈实现一个队列 <a class="header-anchor" href="#用两个栈实现一个队列" aria-label="Permalink to &quot;用两个栈实现一个队列&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>请用两个栈，来实现队列的功能，实现功能 <code>add</code> <code>delete</code> <code>length</code> 。</p><h2 id="队列-queue" tabindex="-1">队列 Queue <a class="header-anchor" href="#队列-queue" aria-label="Permalink to &quot;队列 Queue&quot;">​</a></h2><p>栈，先进后出</p><p>队列，先进先出，API 包括</p><ul><li>add</li><li>delete</li><li>length</li></ul><p>常见的“消息队列”就是队列的一种应用场景</p><ul><li>A 系统向 B 系统持续发送海量的消息</li><li>A 系统先把一条一条消息放在一个 queue</li><li>B 系统再从 queue 中逐条消费（按顺序，先进先出）</li></ul><h2 id="逻辑结构和物理结构" tabindex="-1">逻辑结构和物理结构 <a class="header-anchor" href="#逻辑结构和物理结构" aria-label="Permalink to &quot;逻辑结构和物理结构&quot;">​</a></h2><p>队列和栈一样，是一种逻辑结构。它可以用数组、链表等实现。<br> 思考：用数组实现队列，性能会怎样 —— add 怎样？delete 怎样？</p><p>复杂场景下（如海量数据，内存不够用）需要单独设计。</p><h2 id="题目分析" tabindex="-1">题目分析 <a class="header-anchor" href="#题目分析" aria-label="Permalink to &quot;题目分析&quot;">​</a></h2><p>可画图分析：参考视频讲解</p><ul><li>队列 add <ul><li>往 stack1 push 元素</li></ul></li><li>队列 delete <ul><li>将 stack1 所有元素 pop 出来，push 到 stack2</li><li>将 stack2 执行一次 pop</li><li>再将 stack2 所有元素 pop 出来，push 进 stack1</li></ul></li></ul><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><p>参考 two-stacks-one-queue.ts</p><h2 id="划重点" tabindex="-1">划重点 <a class="header-anchor" href="#划重点" aria-label="Permalink to &quot;划重点&quot;">​</a></h2><ul><li>队列</li><li>画图，帮助梳理解题思路</li></ul>',19),r=[o];function d(u,s,c,h,n,_){return l(),a("div",null,r)}const q=e(t,[["render",d]]);export{k as __pageData,q as default};
