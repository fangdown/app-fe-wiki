import{_ as e,c as a,o as t,a1 as o}from"./chunks/framework.BwTyoF0R.js";const _=JSON.parse('{"title":"Vue computed 和 watch 区别","description":"","frontmatter":{},"headers":[],"relativePath":"面试刷题-wiki/03-前端基础知识/09-vue-computed-watch-区别.md","filePath":"面试刷题-wiki/03-前端基础知识/09-vue-computed-watch-区别.md"}'),c={name:"面试刷题-wiki/03-前端基础知识/09-vue-computed-watch-区别.md"},i=o('<h1 id="vue-computed-和-watch-区别" tabindex="-1">Vue computed 和 watch 区别 <a class="header-anchor" href="#vue-computed-和-watch-区别" aria-label="Permalink to &quot;Vue computed 和 watch 区别&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>Vue computed 和 watch 区别</p><h2 id="两者设计用途不同" tabindex="-1">两者设计用途不同 <a class="header-anchor" href="#两者设计用途不同" aria-label="Permalink to &quot;两者设计用途不同&quot;">​</a></h2><ul><li>computed 用于产出二次处理之后的数据，如对于一个列表进行 filter 处理</li><li>watch 用于监听数据变化（如 v-model 时，数据可能被动改变，需要监听才能拿到）</li></ul><h2 id="computed-有缓存" tabindex="-1">computed 有缓存 <a class="header-anchor" href="#computed-有缓存" aria-label="Permalink to &quot;computed 有缓存&quot;">​</a></h2><ul><li>computed 有缓存，data 不变则缓存不失效</li><li>methods 无缓存，实时计算</li></ul><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><ul><li>computed 就已有数据产出新数据，有缓存</li><li>watch 监听已有数据</li></ul><hr><p>代码参考 WatchAndComputed.vue</p>',11),d=[i];function u(l,h,r,m,n,p){return t(),a("div",null,d)}const f=e(c,[["render",u]]);export{_ as __pageData,f as default};
