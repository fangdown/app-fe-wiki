import{_ as t,c as a,o as i,a1 as l}from"./chunks/framework.BwTyoF0R.js";const f=JSON.parse('{"title":"章回顾","description":"","frontmatter":{},"headers":[],"relativePath":"基础面试-wiki/14-学习过程/14-http/章回顾.md","filePath":"基础面试-wiki/14-学习过程/14-http/章回顾.md"}'),e={name:"基础面试-wiki/14-学习过程/14-http/章回顾.md"},h=l('<h1 id="章回顾" tabindex="-1">章回顾 <a class="header-anchor" href="#章回顾" aria-label="Permalink to &quot;章回顾&quot;">​</a></h1><h2 id="产出" tabindex="-1">产出 <a class="header-anchor" href="#产出" aria-label="Permalink to &quot;产出&quot;">​</a></h2><ul><li>学会 http 基础只是</li><li>学会 http 缓存机制</li></ul><h2 id="主要内容" tabindex="-1">主要内容 <a class="header-anchor" href="#主要内容" aria-label="Permalink to &quot;主要内容&quot;">​</a></h2><ul><li>http的几个面试题</li><li>http常见的状态码有哪些-part1</li><li>http常见的状态码有哪些-part2</li><li>什么是Restful-API</li><li>http哪些常见header</li><li>http为何需要缓存</li><li>cache-control是什么意思-http强制缓存</li><li>Etag和Last-Modified是什么意思-http协商缓存</li><li>刷新页面对http缓存的影响</li><li>http考点总结</li></ul><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ul><li>http 状态码</li><li>http Method</li><li>Restful API</li><li>http headers</li><li>http 缓存策略</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>学习 http 没法像代码演示那样方便的练习，要注意跟随课程示例，理解学习</li></ul>',9),r=[h];function o(s,n,d,c,p,_){return i(),a("div",null,r)}const m=t(e,[["render",o]]);export{f as __pageData,m as default};
