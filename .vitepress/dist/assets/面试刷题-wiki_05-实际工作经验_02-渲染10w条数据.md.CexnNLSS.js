import{_ as a,c as e,o as t,a1 as r}from"./chunks/framework.BwTyoF0R.js";const l="/assets/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8.BIoK55bF.png",b=JSON.parse('{"title":"渲染 10w 条数据","description":"","frontmatter":{},"headers":[],"relativePath":"面试刷题-wiki/05-实际工作经验/02-渲染10w条数据.md","filePath":"面试刷题-wiki/05-实际工作经验/02-渲染10w条数据.md"}'),i={name:"面试刷题-wiki/05-实际工作经验/02-渲染10w条数据.md"},o=r('<h1 id="渲染-10w-条数据" tabindex="-1">渲染 10w 条数据 <a class="header-anchor" href="#渲染-10w-条数据" aria-label="Permalink to &quot;渲染 10w 条数据&quot;">​</a></h1><h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p>后端返回 10w 条数据，该如何渲染？</p><h2 id="设计是否合理" tabindex="-1">设计是否合理？ <a class="header-anchor" href="#设计是否合理" aria-label="Permalink to &quot;设计是否合理？&quot;">​</a></h2><p>前端很少会有一次性渲染 10w 条数据的需求，而且如果直接渲染会非常卡顿。<br> 你可以反问面试官：这是什么应用场景。然后判断这个技术方案是否合理。</p><p>例如，就一个普通的新闻列表，后端一次性给出 10w 条数据是明显设计不合理的。应该分页给出。<br> 你能正常的反问、沟通、给出自己合理的建议，这本身就是加分项。</p><p>当然，面试官话语权更大，他可能说：对，不合理，但就非得这样，该怎么办？</p><h2 id="自定义中间层" tabindex="-1">自定义中间层 <a class="header-anchor" href="#自定义中间层" aria-label="Permalink to &quot;自定义中间层&quot;">​</a></h2><h2 id="虚拟列表" tabindex="-1">虚拟列表 <a class="header-anchor" href="#虚拟列表" aria-label="Permalink to &quot;虚拟列表&quot;">​</a></h2><p>基本原理</p><ul><li>只渲染可视区域 DOM</li><li>其他隐藏区域不渲染，只用一个 <code>&lt;div&gt;</code> 撑开高度</li><li>监听容器滚动，随时创建和销毁 DOM</li></ul><p><img src="'+l+'" alt=""></p><p>虚拟列表实现比较复杂，特别是在结合异步 ajax 加载。明白实现原理，实际项目可用第三方 lib</p><ul><li><a href="https://www.npmjs.com/package/vue-virtual-scroll-list" target="_blank" rel="noreferrer">vue-virtual-scroll-list</a></li><li><a href="https://www.npmjs.com/package/react-virtualized" target="_blank" rel="noreferrer">react-virtualized</a></li></ul><h2 id="答案" tabindex="-1">答案 <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;答案&quot;">​</a></h2><ul><li>沟通需求和场景，给出自己合理的设计建议</li><li>虚拟列表</li></ul><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><p>有时候面试官会出这种刁钻的问题来故意“难为”候选人，把自己扮演成后端角色，看候选人是否好欺负。<br> 如果此时你顺从面试官的问题继续埋头苦思，那就错了。应该适当的追问、沟通、提出问题、给出建议，这是面试官想要看到的效果。</p><p>实际工作中，前端和后端、服务端的人合作，那面会遇到各种设计沟通的问题。看你是否有这种实际工作经验。</p>',19),s=[o];function n(c,h,d,_,p,u){return t(),e("div",null,s)}const w=a(i,[["render",n]]);export{b as __pageData,w as default};
