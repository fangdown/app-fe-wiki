import{_ as a,c as e,o as t,a1 as i}from"./chunks/framework.BwTyoF0R.js";const m=JSON.parse('{"title":"数据结构和算法","description":"","frontmatter":{},"headers":[],"relativePath":"面试刷题-wiki/06-数据结构和算法/00-开始.md","filePath":"面试刷题-wiki/06-数据结构和算法/00-开始.md"}'),l={name:"面试刷题-wiki/06-数据结构和算法/00-开始.md"},r=i('<h1 id="数据结构和算法" tabindex="-1">数据结构和算法 <a class="header-anchor" href="#数据结构和算法" aria-label="Permalink to &quot;数据结构和算法&quot;">​</a></h1><p>数据结构和算法，是大厂前端面试的“拦路虎”，很多同学都望而生畏。其实如果了解常用数据结构，掌握基本的算法思维，就不能应对。本章将通过多个面试题，为你讲解算法面试题的解题思路，同时复习常用数据结构和算法思维。</p><h2 id="为何要考察" tabindex="-1">为何要考察 <a class="header-anchor" href="#为何要考察" aria-label="Permalink to &quot;为何要考察&quot;">​</a></h2><p>如果在短时间之内快速判断一个工程师是否优秀？考察算法是最合理的方式 —— 这是业界多年的经验积累。</p><p>前端面试考算法不是因为内卷。算法一直在后端面试中被考察，现在前端也考查，说明前端能做的工作越来越多了。这是好事。</p><h2 id="考察的重点" tabindex="-1">考察的重点 <a class="header-anchor" href="#考察的重点" aria-label="Permalink to &quot;考察的重点&quot;">​</a></h2><ul><li>算法的时间复杂度和空间复杂度</li><li>三大算法思维：贪心，二分，动态规划</li><li>常见数据结构</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>算法，有难度，轻耐心学习</li><li>不仅关注题目本身，更要关注知识点和解题思路</li><li>按顺序学习（本章课程按顺序设计的）</li></ul><h2 id="看几个面试题" tabindex="-1">看几个面试题 <a class="header-anchor" href="#看几个面试题" aria-label="Permalink to &quot;看几个面试题&quot;">​</a></h2><p>列举几个代表性的面试题，具体参考视频。</p>',11),o=[r];function n(h,s,_,c,d,p){return t(),e("div",null,o)}const f=a(l,[["render",n]]);export{m as __pageData,f as default};
