import{_ as o,c as e,o as i,a1 as t}from"./chunks/framework.BwTyoF0R.js";const u=JSON.parse('{"title":"todo list 设计","description":"","frontmatter":{},"headers":[],"relativePath":"框架面试-wiki/08-组件设计/02-todo-list设计.md","filePath":"框架面试-wiki/08-组件设计/02-todo-list设计.md"}'),d={name:"框架面试-wiki/08-组件设计/02-todo-list设计.md"},l=t('<h1 id="todo-list-设计" tabindex="-1">todo list 设计 <a class="header-anchor" href="#todo-list-设计" aria-label="Permalink to &quot;todo list 设计&quot;">​</a></h1><h2 id="简单的-常考" tabindex="-1">简单的（常考） <a class="header-anchor" href="#简单的-常考" aria-label="Permalink to &quot;简单的（常考）&quot;">​</a></h2><ul><li>画原型图</li><li>组件设计</li><li>数据结构设计</li></ul><p>代码参考 <code>react-demo</code> 中 <code>baseUse/PropsDemo</code> ，只是需要再把 Item 组件单独拆分一下。</p><h2 id="复杂的-结合状态管理" tabindex="-1">复杂的，结合状态管理 <a class="header-anchor" href="#复杂的-结合状态管理" aria-label="Permalink to &quot;复杂的，结合状态管理&quot;">​</a></h2><p>回顾之前 <code>react-demo</code> 中 <code>reduxUse</code> 的代码，以及系统演示</p><p>可以先不看 Footer 过滤功能</p><ul><li>运行演示功能</li><li>查看代码文件结构</li><li><code>app.js</code></li><li><code>reducers</code><ul><li><code>todos.js</code></li><li><code>visibilityFilter.js</code></li></ul></li><li><code>actions/index.js</code></li><li><code>components/App.js</code> - 查看组件结构</li><li><code>containers/AddTodo.js</code></li><li><code>containers/VisibleTodoList.js</code></li><li><code>components/TodoList</code></li><li><code>components/Footer.js</code></li><li><code>containers/FilterLink.js</code></li><li><code>components/Link</code></li><li>总结：组件拆分，数据结构，数据操作（actions reducer 等）</li></ul>',8),c=[l];function s(a,r,n,_,p,h){return i(),e("div",null,c)}const f=o(d,[["render",s]]);export{u as __pageData,f as default};
