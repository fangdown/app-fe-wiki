import{_ as e,c as o,o as i,a1 as t}from"./chunks/framework.BwTyoF0R.js";const h=JSON.parse('{"title":"购物车组件设计","description":"","frontmatter":{},"headers":[],"relativePath":"框架面试-wiki/08-组件设计/03-购物车设计.md","filePath":"框架面试-wiki/08-组件设计/03-购物车设计.md"}'),c={name:"框架面试-wiki/08-组件设计/03-购物车设计.md"},a=t('<h1 id="购物车组件设计" tabindex="-1">购物车组件设计 <a class="header-anchor" href="#购物车组件设计" aria-label="Permalink to &quot;购物车组件设计&quot;">​</a></h1><p>简单版本的 —— 不再代码演示了，只做一下分析：</p><ul><li>画原型图（结合外卖 app 的订单界面，考虑每个商品的数量）</li><li>组件设计</li><li>数据结构设计</li></ul><p>复杂版本的，代码示例 <code>~/Learn/vuex/example/shopping-cart</code> （vuex 中的 example）</p><p>可以先不看<strong>结算</strong>功能</p><ul><li>先把 demo 运行起来，看看效果</li><li>看代码结构 <code>app.js</code> <code>components</code> <code>api</code></li><li><code>app.js</code></li><li><code>api/shop.js</code></li><li><code>store/modules/products.js</code></li><li><code>store/modules/cart.js</code></li><li><code>components/App.vue</code> - 查看组件结构</li><li><code>components/ProductList.vue</code></li><li><code>components/ShoppingCart.vue</code></li><li>总结：组件拆分，数据结构，数据操作（actions mutations）</li></ul>',6),l=[a];function s(d,p,n,r,_,u){return i(),o("div",null,l)}const f=e(c,[["render",s]]);export{h as __pageData,f as default};
